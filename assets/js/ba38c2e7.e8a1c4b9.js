"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9018],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3709:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],p={sidebar_position:3},l="Pixel",s={unversionedId:"inputs/honeypot/pixel",id:"inputs/honeypot/pixel",title:"Pixel",description:"\ud83d\udfe2 Supported",source:"@site/docs/inputs/honeypot/pixel.md",sourceDirName:"inputs/honeypot",slug:"/inputs/honeypot/pixel",permalink:"/inputs/honeypot/pixel",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Webhook",permalink:"/inputs/honeypot/webhook"},next:{title:"CDC",permalink:"/inputs/honeypot/cdc"}},d={},c=[{value:"Collection Method",id:"collection-method",level:2},{value:"Parameter Payloads",id:"parameter-payloads",level:3},{value:"Base64 Encoded Parameter Payloads",id:"base64-encoded-parameter-payloads",level:3},{value:"Namespacing Method",id:"namespacing-method",level:2},{value:"Arbitrary Pixels",id:"arbitrary-pixels",level:3},{value:"Named Pixels",id:"named-pixels",level:3},{value:"Validation Method",id:"validation-method",level:2},{value:"Sample Pixel Configuration",id:"sample-pixel-configuration",level:2}],m={toc:c};function u(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pixel"},"Pixel"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83d\udfe2 Supported")),(0,o.kt)("h2",{id:"collection-method"},"Collection Method"),(0,o.kt)("h3",{id:"parameter-payloads"},"Parameter Payloads"),(0,o.kt)("p",null,"Honeypot supports collecting payloads via url query params."),(0,o.kt)("p",null,"This method of data collection has drawbacks such as ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/812925/what-is-the-maximum-possible-length-of-a-query-string"},"max uri lengths"),", but is extremely simple to get started with."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For example")," -> if ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl")," is configured as a pixel input, submitting a ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," request to ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl/?hello=world&userId=10")," will send a payload of ",(0,o.kt)("inlineCode",{parentName:"p"},'{"hello": "world", "userId": "10"}')," to the configured sinks. No sdk's necessary."),(0,o.kt)("h3",{id:"base64-encoded-parameter-payloads"},"Base64 Encoded Parameter Payloads"),(0,o.kt)("p",null,'The Honeypot pixel input supports a "special" query param, ',(0,o.kt)("inlineCode",{parentName:"p"},"hbp"),", by which b64 encoded payloads can be collected."),(0,o.kt)("p",null,"If Honeypot is configured with a pixel path of ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl")," (the default), submitting a ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," request to ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl?hbp=eyJoZWxsbyI6IndvcmxkIn0")," will send a payload of ",(0,o.kt)("inlineCode",{parentName:"p"},'{"hello":"world"}')," to the configured sinks."),(0,o.kt)("h2",{id:"namespacing-method"},"Namespacing Method"),(0,o.kt)("p",null,"Honeypot supports two ways of namespacing pixel payloads: ",(0,o.kt)("inlineCode",{parentName:"p"},"arbitrary")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"named"),"."),(0,o.kt)("h3",{id:"arbitrary-pixels"},"Arbitrary Pixels"),(0,o.kt)("p",null,"Any requests sent to the configured root pixel path are considered ",(0,o.kt)("inlineCode",{parentName:"p"},"arbitrary"),"."),(0,o.kt)("p",null,"If Honeypot is configured with a pixel path of ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl")," (the default), all requests to ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl")," ",(0,o.kt)("strong",{parentName:"p"},"will not be validated")," and will be namespaced according to ",(0,o.kt)("inlineCode",{parentName:"p"},"honeypot.pixel.arbitrary"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Yo")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Since this method is basically a catchall it should be used sparingly."))),(0,o.kt)("h3",{id:"named-pixels"},"Named Pixels"),(0,o.kt)("p",null,"Any requests sent to a schema-specific pixel path are ",(0,o.kt)("strong",{parentName:"p"},"namespaced and validated according to the associated schema"),"."),(0,o.kt)("p",null,"If Honeypot is configured with a pixel path of ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl")," (the default), all requests to ",(0,o.kt)("inlineCode",{parentName:"p"},"/pxl/io.silverton/someschema/v1.0.json")," will be validated and namespaced according to the contents of the ",(0,o.kt)("inlineCode",{parentName:"p"},"io.silverton/someschema/v1.0.json")," schema."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Pro tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Named pixels are the better way to go. Especially when payloads are base64 encoded so properties can have non-string types."))),(0,o.kt)("h2",{id:"validation-method"},"Validation Method"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arbitrary pixels:"),"  Not validated."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Named pixels with string query params:")," Validated according to the associated schema. ",(0,o.kt)("em",{parentName:"p"},"But all schema properties must be of type ",(0,o.kt)("inlineCode",{parentName:"em"},"string"))," \ud83d\udc4e."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Named pixels with the ",(0,o.kt)("inlineCode",{parentName:"strong"},"hbp")," b64-encoded query param:")," Validated according to the associated schema. ",(0,o.kt)("em",{parentName:"p"},"Schema properties can be of any type")," \ud83d\udc4d."),(0,o.kt)("h2",{id:"sample-pixel-configuration"},"Sample Pixel Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"inputs:\n  pixel:\n    enabled: true     # Whether or not to enable pixels\n    path: /pxl        # Root path for incoming pixels\n")))}u.isMDXComponent=!0}}]);