"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,b=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(b,o(o({ref:t},d),{},{components:n})):a.createElement(b,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1624:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Birds, Bees, and well-structured piles of JSON",description:"Building a well-structured data lake is hard.",authors:["jake"],slug:"/birds-bees-and-organizing-your-data-with-duckdb-and-buz",tags:["duckdb","buz","birds and bees"],date:"2023-04-28T00:00",hide_table_of_contents:!0},o=void 0,s={permalink:"/blog/birds-bees-and-organizing-your-data-with-duckdb-and-buz",source:"@site/blog/birds-beeds-organizing-your-data/index.md",title:"Birds, Bees, and well-structured piles of JSON",description:"Building a well-structured data lake is hard.",date:"2023-04-28T00:00:00.000Z",formattedDate:"April 28, 2023",tags:[{label:"duckdb",permalink:"/blog/tags/duckdb"},{label:"buz",permalink:"/blog/tags/buz"},{label:"birds and bees",permalink:"/blog/tags/birds-and-bees"}],readingTime:7.135,hasTruncateMarker:!0,authors:[{name:"Jake",title:"\ud83d\udc1d",url:"https://github.com/jakthom",imageURL:"https://github.com/jakthom.png",key:"jake"}],frontMatter:{title:"Birds, Bees, and well-structured piles of JSON",description:"Building a well-structured data lake is hard.",authors:["jake"],slug:"/birds-bees-and-organizing-your-data-with-duckdb-and-buz",tags:["duckdb","buz","birds and bees"],date:"2023-04-28T00:00",hide_table_of_contents:!0},nextItem:{title:"Serverless Makes Streaming Accessible",permalink:"/blog/serverless-makes-streaming-accessible"}},l={authorsImageUrls:[void 0]},p=[{value:"For example, this schema:",id:"for-example-this-schema",level:4},{value:"and this payload:",id:"and-this-payload",level:4},{value:"will result in this envelope:",id:"will-result-in-this-envelope",level:4}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"It is not uncommon for instrumentation, webhooks, and events to end up in large piles of (messy, terrifying, unusable) JSON."),(0,r.kt)("p",null,"But ",(0,r.kt)("a",{parentName:"p",href:"https://buz.dev/"},"Buz")," makes it easy to create well-structured piles of JSON. \ud83d\udc1d"),(0,r.kt)("p",null,"And ",(0,r.kt)("a",{parentName:"p",href:"https://duckdb.org/"},"DuckDB")," makes it easy to query said piles of JSON. \ud83e\udd86"),(0,r.kt)("p",null,"The combination of \ud83e\udd86's and \ud83d\udc1d's is pretty cool."),(0,r.kt)("h1",{id:"schematizing-data"},"Schematizing Data"),(0,r.kt)("p",null,"A lot can be said about using schemas to describe data."),(0,r.kt)("p",null,"Schemas can be used to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://app.quicktype.io/"},"auto-generate")," tracking ",(0,r.kt)("a",{parentName:"strong",href:"https://www.npmjs.com/package/json-schema-to-typescript"},"SDK's")),", seed ",(0,r.kt)("strong",{parentName:"p"},"data dictionaries and discovery mechanisms"),", ",(0,r.kt)("strong",{parentName:"p"},"version payloads")," and more."),(0,r.kt)("p",null,"But schemas also provide significant value far downstream of ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"data generation")),", ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"data collection")),', and "organizational contracts".'),(0,r.kt)("h1",{id:"payload-validation-and-annotation"},"Payload validation and annotation"),(0,r.kt)("p",null,"Buz uses metadata attributes defined within schemas to validate and annotate payloads."),(0,r.kt)("h4",{id:"for-example-this-schema"},"For example, this schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "$schema": "https://registry.buz.dev/s/io.silverton/buz/internal/meta/v1.0.json",\n    "$id": "io.silverton/buz/example/birdsBees/v1.0.json",\n    "title": "io.silverton/buz/example/birdsBees/v1.0.json",\n    "description": "Schema for birds and bees",\n    "owner": {\n        "org": "silverton",\n        "team": "buz",\n        "individual": "jakthom"\n    },\n    "self": {\n        "vendor": "io.silverton",\n        "namespace": "buz.example.birdsBees",\n        "version": "1.0"\n    },\n    "type": "object",\n    "properties": {\n        "uuid": {\n            "description": "The event uuid",\n            "type": "string",\n            "format": "uuid"\n        },\n        "event_name": {\n            "description": "The name of the event",\n            "type": "string"\n        },\n        "organization": {\n            "type": "object",\n            "properties": {\n                "name": {\n                    "description": "The organization name",\n                    "type": "string"\n                },\n                "id": {\n                    "description": "The organization id",\n                    "type": "number"\n                }\n            }\n        }\n    },\n    "required": [\n        "uuid",\n        "event_name",\n        "organization"\n    ],\n    "additionalProperties": false\n}\n')),(0,r.kt)("h4",{id:"and-this-payload"},"and this payload:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "uuid": "b06834d6-aea1-4ef2-9c00-8cd5aa76c8e2",\n    "event_name": "viewed",\n    "organization": {\n      "name": "bee corp",\n      "id": 10,\n    }\n}\n')),(0,r.kt)("h4",{id:"will-result-in-this-envelope"},"will result in this envelope:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n    {\n        "uuid": "28b0b531-285f-46f7-88e5-92b34d403fcd",\n        "timestamp": "2023-04-28T21:09:16.960953Z",\n        "buzTimestamp": "2023-04-28T21:09:16.960953Z",\n        "buzVersion": "x.x.dev",\n        "buzName": "buz-bootstrap",\n        "buzEnv": "development",\n        "protocol": "webhook",\n        "schema": "io.silverton/buz/example/birdsBees/v1.0.json",\n        "vendor": "io.silverton",\n        "namespace": "buz.example.birdsBees",\n        "version": "1.0",\n        "isValid": true,\n        "contexts": {\n            "io.silverton/buz/internal/contexts/httpHeaders/v1.0.json": {\n                "Accept": "*/*",\n                "Content-Length": "153",\n                "Content-Type": "application/json",\n                "User-Agent": "curl/7.86.0"\n            }\n        },\n        "payload": {\n            "event_name": "viewed",\n            "organization": {\n                "id": 10,\n                "name": "bee corp"\n            },\n            "uuid": "b06834d6-aea1-4ef2-9c00-8cd5aa76c8e2"\n        }\n    }\n]\n')),(0,r.kt)("p",null,"Schema attributes get appended to the envelope, which can be used to consistently, reliably answer questions like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Where was payload sourced from?"),(0,r.kt)("li",{parentName:"ul"},"What does this payload represent?"),(0,r.kt)("li",{parentName:"ul"},"What version of the ",(0,r.kt)("inlineCode",{parentName:"li"},"buz.example.birdsBees")," schema does this event conform to?"),(0,r.kt)("li",{parentName:"ul"},"Is the payload valid?")),(0,r.kt)("p",null,"These attributes are appended to sink-specific mechanisms like ",(0,r.kt)("a",{parentName:"p",href:"https://kafka.apache.org/20/javadoc/index.html?org/apache/kafka/connect/header/Header.html"},"Kafka headers")," or ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/pubsub/docs/samples/pubsub-publish-custom-attributes"},"Pub/Sub attributes"),"."),(0,r.kt)("p",null,"And power automation far downstream of the point of ",(0,r.kt)("inlineCode",{parentName:"p"},"collection"),"."),(0,r.kt)("h1",{id:"payload-annotation-based-partitioning"},"Payload annotation-based partitioning"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/silverton-io/buz/tree/main/deploy/terraform/aws/lambda"},"example AWS deployment of Buz")," writes events directly to Kinesis Firehose, which then leverages ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html"},"dynamic partitioning")," to write incoming payloads to well-structured S3 paths."),(0,r.kt)("p",null,"The above ",(0,r.kt)("inlineCode",{parentName:"p"},"buz.example.birdsBees")," payload will be written to an s3 path of:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"isValid=true/vendor=io.silverton/namespace=buz.example.birdsBees/version=1.0/year=2023/month=4/day=28/$FILE.gz")),(0,r.kt)("p",null,"Payload validation, vendors, namespaces, versions, etc are all written to different paths. Which also means every s3 path is comprised of ",(0,r.kt)("strong",{parentName:"p"},"identically-structured payloads"),"."),(0,r.kt)("p",null,"This is key."),(0,r.kt)("h1",{id:"querying-json-directly-from-s3"},"Querying JSON directly from S3"),(0,r.kt)("p",null,"DuckDB makes it easy to query your S3 pile (bucket? lake? lakehouse? idk)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To start querying this well-structured pile, first load and configure DuckDB's ",(0,r.kt)("a",{parentName:"strong",href:"https://duckdb.org/docs/extensions/httpfs.html"},"httpfs extension"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D install httpfs;\nD load httpfs;\nD set s3_region = 'us-east-1'; # or wherever\nD set s3_access_key_id = '$YOUR_ID';\nD set s3_secret_access_key = '$YOUR_KEY';\n")),(0,r.kt)("p",null,"Since the pile of JSON in S3 is consistently-structured, DuckDB schema discovery is effectively free."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You get real tables with real types. And ",(0,r.kt)("inlineCode",{parentName:"strong"},"struct"),"s all the way down:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'D create table local_pile as\nselect\n    *\nfrom\n    read_json_auto(\'s3://bz-dev-events/isValid=true/vendor=io.silverton/namespace=buz.example.birdsBees/version=1.0/year=2023/month=4/day=28/*.json.gz\', timestampformat=\'%Y-%m-%dT%H:%M:%S.%fZ\');\n\nD describe local_pile;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 column_name  \u2502                                                                            column_type                                                                             \u2502  null   \u2502   key   \u2502 default \u2502 extra \u2502\n\u2502   varchar    \u2502                                                                              varchar                                                                               \u2502 varchar \u2502 varchar \u2502 varchar \u2502 int32 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 uuid         \u2502 UUID                                                                                                                                                               \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 timestamp    \u2502 TIMESTAMP                                                                                                                                                          \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 buzTimestamp \u2502 TIMESTAMP                                                                                                                                                          \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 buzVersion   \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 buzName      \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 buzEnv       \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 protocol     \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 schema       \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 vendor       \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 namespace    \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 version      \u2502 VARCHAR                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 isValid      \u2502 BOOLEAN                                                                                                                                                            \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 contexts     \u2502 STRUCT("io.silverton/buz/internal/contexts/httpHeaders/v1.0.json" STRUCT("Accept" VARCHAR, "Content-Length" BIGINT, "Content-Type" VARCHAR, "User-Agent" VARCHAR)) \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u2502 payload      \u2502 STRUCT(event_name VARCHAR, organization STRUCT(id UBIGINT, "name" VARCHAR), uuid UUID)                                                                             \u2502 YES     \u2502         \u2502         \u2502       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 14 rows                                                                                                                                                                                                       6 columns \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Queries like this are possible out of the box:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D select\n>     date_trunc('day', timestamp) as day,\n>     payload.event_name,\n>     payload.organization.id as org_id,\n>     count(*) as events\n> from\n>     local_pile\n> group by\n>     1,2,3;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    day     \u2502 event_name \u2502 org_id \u2502 events \u2502\n\u2502    date    \u2502  varchar   \u2502 uint64 \u2502 int64  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 2023-04-28 \u2502 viewed     \u2502     10 \u2502  210353\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h1",{id:"well-structured-piles-of-parquet"},"Well-structured piles of Parquet"),(0,r.kt)("p",null,"A well-structured pile of parquet is sometimes preferable to a well-structured pile of JSON. Which is fine!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This too is easy with DuckDB:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D copy local_pile to 'local_pile.parquet' (format parquet);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To query the local parquet pile:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D select * from read_parquet('local_pile.parquet');\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502         uuid         \u2502      timestamp       \u2502     buzTimestamp     \u2502 buzVersion \u2502    buzName    \u2502   buzEnv    \u2502 \u2026 \u2502    vendor    \u2502      namespace       \u2502 version \u2502 isValid \u2502       contexts       \u2502       payload        \u2502\n\u2502         uuid         \u2502      timestamp       \u2502      timestamp       \u2502  varchar   \u2502    varchar    \u2502   varchar   \u2502   \u2502   varchar    \u2502       varchar        \u2502 varchar \u2502 boolean \u2502 struct(\"io.silvert\u2026  \u2502 struct(event_name \u2026  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 813da4d2-c49b-4b99\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 dcbf6249-42e0-4abe\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 3ae2d65c-f785-41b5\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 6c7b3e35-6635-4eec\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 8b3b4c8c-2ce5-4431\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 8683ec4e-38a4-49c1\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 c098fdd6-7d0a-446a\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 dc47ec95-fe66-472d\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 a3494e5e-4709-4e62\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 a6c4fc0e-b03f-47ac\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 55065c25-546a-4f26\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 808bfe01-6489-44ae\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 ff6325aa-5235-4f94\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 b488fe95-50d6-4244\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n\u2502 f7d63eb5-a1e5-41c5\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 2023-04-28 21:34:0\u2026  \u2502 x.x.dev    \u2502 buz-bootstrap \u2502 development \u2502 \u2026 \u2502 io.silverton \u2502 buz.example.birdsB\u2026  \u2502 1.0     \u2502 true    \u2502 {'io.silverton/buz\u2026  \u2502 {'event_name': vie\u2026  \u2502\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Or write it straight back to S3 as partitioned Parquet:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D copy local_pile to 's3://bz-dev-events/partitioned' (format parquet, partition_by (isValid, vendor, namespace, version));\n")),(0,r.kt)("h1",{id:"in-conclusion"},"In Conclusion"),(0,r.kt)("p",null,"Tools like Buz and DuckDB make it easier than ever to create and use well-structured data sitting in S3. Your pile of JSON (or Parquet) doesn't need to be a mess!"),(0,r.kt)("p",null,"And with functionality like ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duckdb/duckdb/pull/7290"},"registering file paths")," or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duckdb/duckdb/discussions/6209"},"this")," it's only getting better."))}u.isMDXComponent=!0}}]);